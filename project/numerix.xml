<xml>
   <!-- <set name="static_link" value="1" /> -->
   <include name="${HXCPP}/toolchain/haxe-target.xml" />


   <files id="numerix" >
     <compilerflag value="-Iinclude" />
     <compilerflag value="-DNX_GPU" />
     <compilerflag value="-DNUMERIX_SIMD" />
     <compilerflag value="-I${CUDA_PATH}/include" />
     <compilerflag value="-I${CUDA_PATH}/cudnn/cuda/include" />
     <compilerflag value="-mfpu=neon" if="HXCPP_ARMV7||HXCPP_ARM64" />

     <depend name="include/Tensor.h" />
     <depend name="include/Ops.h" />
     <depend name="include/NxThread.h" />
     <depend name="include/Layer.h" />

     <file name="src/Api.cpp" />
     <file name="src/Tensor.cpp" />
     <file name="src/TensorData.cpp" />
     <file name="src/NxThread.cpp" />
     <file name="src/layers/Conv2D.cpp" />
     <file name="src/layers/MaxPool.cpp" />
     <file name="src/layers/Layer.cpp" />
     <file name="src/layers/Concat.cpp" />
     <file name="src/layers/Reorg.cpp" />
     <file name="src/layers/Yolo.cpp" />

     <file name="src/Cuda.cpp" />

   </files>

   <target id="default" tool="linker" toolid="dll" output="numerix" >
      <files id="numerix" />
      <outdir name="../ndll/${BINDIR}" />
      <ext value=".ndll" />

      <libpath name="${CUDA_PATH}/lib/x64/" />
      <libpath name="${CUDA_PATH}/cudnn/cuda/lib/x64" />
      <lib base="cuda" />
      <lib base="cudart" />
      <lib base="curand" />
      <lib base="cublas" />
      <lib base="cudnn" />

      <lib name="-lpthread" if="linux" unless="static_link" />
   </target>

</xml>
